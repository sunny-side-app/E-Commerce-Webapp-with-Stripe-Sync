name: CD - Deploy to Production

on:
  pull_request:
    branches:
      - develop

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Add SSH private key
      run: |
        mkdir -p ~/.ssh
        echo "${{ secrets.EC2_SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
        chmod 600 ~/.ssh/id_rsa
    
    - name: Test SSH connection
      run: |
        ssh -i ~/.ssh/id_rsa -o StrictHostKeyChecking=no ${{ secrets.EC2_USER }}@${{ secrets.PRODUCTION_SERVER_IP }} "echo SSH connection successful"

    - name: Add SSH known hosts
      run: ssh-keyscan -H ${{ secrets.PRODUCTION_SERVER_IP }} >> ~/.ssh/known_hosts

    - name: Create .env file
      run: |
        echo "${{ secrets.ENV_FILE_CONTENT }}" > .env
        grep -E '^[A-Z_]+=[^#]*$' .env || (echo "Invalid .env format" && exit 1)

    - name: Copy .env file to EC2
      run: scp .env ${{ secrets.EC2_USER }}@${{ secrets.PRODUCTION_SERVER_IP }}:/home/ubuntu/.env

    - name: Log in to Docker Hub
      run: echo "${{ secrets.DOCKER_HUB_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_HUB_USERNAME }}" --password-stdin

    - name: Build and push Docker image
      run: |
        docker build -t ${{ secrets.DOCKER_HUB_USERNAME }}/ecommerce-django:${{ github.sha }} .
        docker push ${{ secrets.DOCKER_HUB_USERNAME }}/ecommerce-django:${{ github.sha }}

    - name: Deploy to AWS EC2
      run: |
        ssh -o StrictHostKeyChecking=no ${{ secrets.EC2_USER }}@${{ secrets.PRODUCTION_SERVER_IP }} << 'EOF'
          echo "${{ secrets.DOCKER_HUB_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_HUB_USERNAME }}" --password-stdin
          docker pull ${{ secrets.DOCKER_HUB_USERNAME }}/ecommerce-django:${{ github.sha }}
          if docker ps -a --format '{{.Names}}' | grep -Eq '^ecommerce-web$'; then
            docker stop ecommerce-web
            docker rm ecommerce-web
          fi
          docker run -d --name ecommerce-web -p 80:8080 --env-file /home/ubuntu/.env ${{ secrets.DOCKER_HUB_USERNAME }}/ecommerce-django:${{ github.sha }}
        EOF
